name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check
      - run: cd crates/fuzzing-support && cargo fmt --all -- --check
      - run: cd crates/test-fallibility && cargo fmt --all -- --check
      - run: cd crates/tests-from-std && cargo fmt --all -- --check
      - run: cd crates/callgrind-benches && cargo fmt --all -- --check
      - run: cd crates/criterion-benches && cargo fmt --all -- --check
      - run: cd fuzz && cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with: 
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --tests --no-default-features --  -Dwarnings
      - run: cargo clippy --tests --features serde,bytemuck,zerocopy-08,allocator-api2-02,allocator-api2-03 --  -Dwarnings
  clippy-nightly:
    needs: clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with: 
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --tests --no-default-features -- -Dwarnings
      - run: cargo clippy --tests --features serde,bytemuck,zerocopy-08,allocator-api2-02,allocator-api2-03 -- -Dwarnings
      - run: cargo clippy --tests --all-features -- -Dwarnings
      - run: cd crates/test-hashbrown && cargo clippy -- -Dwarnings
      - run: cd crates/test-hashbrown && cargo clippy --all-features -- -Dwarnings
      - run: cd crates/tests-from-std && cargo clippy --tests -- -Dwarnings
      - run: cd crates/test-fallibility && cargo clippy -- -Dwarnings
      - run: cd crates/callgrind-benches && cargo clippy --tests --benches --workspace -- -Dwarnings
      - run: cd crates/criterion-benches && cargo clippy --tests --benches -- -Dwarnings
  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.1
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --no-default-features
      - run: cargo check --features serde,zerocopy-08,allocator-api2-02
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --features serde,zerocopy-08,allocator-api2-02,allocator-api2-03
      - run: cargo test --test compile_fail -- --ignored
      - run: cargo test --no-default-features --test unavailable_panicking_macros -F alloc
  test-nightly:
    runs-on: ubuntu-latest
    env:
      MIRIFLAGS: "-Zmiri-strict-provenance"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --all-features
      - run: cargo miri test --all-features
      - run: cd crates/test-hashbrown && cargo test
      - run: cd crates/test-hashbrown && cargo test --all-features
      - run: cd crates/test-hashbrown && cargo miri test
      - run: cd crates/test-hashbrown && cargo miri test --all-features
      - run: cd crates/tests-from-std && cargo test
      - run: cd crates/tests-from-std && cargo miri test
      - run: cd crates/fuzzing-support && cargo test
      - run: cd crates/fuzzing-support && cargo miri test
  minimal-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - run: cargo minimal-versions check
      - run: cargo minimal-versions check --all-features
  sync-docs:
    runs-on: ubuntu-latest
    needs: fmt
    steps:
    - uses: actions/checkout@v4
    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-insert-docs
    - run: cargo insert-docs --all-features --check
  doc: 
    runs-on: ubuntu-latest
    needs: sync-docs
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - run: cargo rustdoc --all-features -- --cfg docsrs -Z unstable-options --generate-link-to-definition -Dwarnings